import pathlib
import shutil
import uuid
from simvue_integrations.connectors.fds import FDSRun

def fds_example(run_folder) -> None:

    # Initialise the FDSRun class as a context manager
    with FDSRun() as run:
        # Initialise the run, providing a name for the run, and optionally extra information such as a folder, description, tags etc
        run.init(
            name="fds_simulation_vents-%s" % str(uuid.uuid4()),
            description="An example of using the FDSRun Connector to track an FDS simulation.",
            folder=run_folder,
            tags=["fds", "vents"],
        )
        
        # You can use any of the Simvue Run() methods to upload extra information before/after the simulation
        run.create_alert(
            name="visibility_below_three_metres",
            metric="eye_level_visibility",
            source="metrics",
            frequency=1,
            rule="is below",
            threshold=3,
        )

        # Then call the .launch() method to start your FDS simulation, providing the path to the input file
        run.launch(
            fds_input_file_path = pathlib.Path(__file__).parent.joinpath("activate_vents.fds"),
            workdir_path = str(pathlib.Path(__file__).parent.joinpath("results"))
        )
        
        # Once the simulation is complete, you can upload any final items to the Simvue run before it closes
        run.log_event("Deleting local copies of results...")
        # Delete local copies of results generated by this run, as these are all now stored by Simvue!
        shutil.rmtree(pathlib.Path(__file__).parent.joinpath("results"))
        
        return run.id

if __name__ == "__main__":
    fds_example("/fds_example")

